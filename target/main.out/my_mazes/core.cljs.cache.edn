{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name my-mazes.core, :imports nil, :requires {mat thi.ng.geom.matrix, thi.ng.geom.matrix thi.ng.geom.matrix, kd kdtree, dom thi.ng.domus.core, thi.ng.geom.core thi.ng.geom.core, reagent.core reagent.core, r reagent.core, v thi.ng.geom.vector, thi.ng.geom.svg.core thi.ng.geom.svg.core, thi.ng.math.core thi.ng.math.core, shodan.inspection shodan.inspection, shodan shodan.inspection, m thi.ng.math.core, thi.ng.geom.vector thi.ng.geom.vector, kdtree kdtree, g thi.ng.geom.core, thi.ng.domus.core thi.ng.domus.core, svg thi.ng.geom.svg.core}, :uses {TWO_PI thi.ng.math.core, INF+ thi.ng.math.core, M32 thi.ng.geom.matrix, INF- thi.ng.math.core, M44 thi.ng.geom.matrix, vec3 thi.ng.geom.vector, PI thi.ng.math.core, DEG thi.ng.math.core, vec2 thi.ng.geom.vector, RAD thi.ng.math.core, *eps* thi.ng.math.core, SQRT2 thi.ng.math.core}, :defs {alternate-bias {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 126, :column 7, :end-line 126, :end-column 21, :arglists (quote ([f]))}, :name my-mazes.core/alternate-bias, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 21, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 126, :end-line 126, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, update-maze! {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 236, :column 7, :end-line 236, :end-column 19, :arglists (quote ([]))}, :name my-mazes.core/update-maze!, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 236, :end-line 236, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, no-bias {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 123, :column 7, :end-line 123, :end-column 14, :arglists (quote ([[x y]]))}, :name my-mazes.core/no-bias, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 14, :method-params ([p__69136]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 123, :end-line 123, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[x y]]))}, transform-polylines {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 179, :column 7, :end-line 179, :end-column 26, :arglists (quote ([f polys]))}, :name my-mazes.core/transform-polylines, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 26, :method-params ([f polys]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 179, :end-line 179, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f polys]))}, make-T-bias {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 141, :column 7, :end-line 141, :end-column 18, :arglists (quote ([[[x-min y-min] [x-max y-max]]]))}, :name my-mazes.core/make-T-bias, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 18, :method-params ([p__69197]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[[x-min y-min] [x-max y-max]]]))}, main {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 313, :column 7, :end-line 313, :end-column 11, :arglists (quote ([])), :doc "Application main entry point. Initializes app-state and\n  kicks off React component lifecycle."}, :name my-mazes.core/main, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 313, :end-line 313, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Application main entry point. Initializes app-state and\n  kicks off React component lifecycle."}, cell->barys-id {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 61, :column 7, :end-line 61, :end-column 21, :arglists (quote ([c]))}, :name my-mazes.core/cell->barys-id, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 21, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, menu {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 281, :column 7, :end-line 281, :end-column 11, :arglists (quote ([id param values]))}, :name my-mazes.core/menu, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 11, :method-params ([id param values]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 281, :end-line 281, :max-fixed-arity 3, :fn-var true, :arglists (quote ([id param values]))}, less-than-xy? {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 190, :column 7, :end-line 190, :end-column 20, :arglists (quote ([[x0 y0] [x1 y1]]))}, :name my-mazes.core/less-than-xy?, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 20, :method-params ([p__69281 p__69282]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 190, :end-line 190, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[x0 y0] [x1 y1]]))}, pick-random-non-nil {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 110, :column 7, :end-line 110, :end-column 26, :arglists (quote ([bias xs]))}, :name my-mazes.core/pick-random-non-nil, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 26, :method-params ([bias xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 2, :fn-var true, :arglists (quote ([bias xs]))}, slider {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 274, :column 7, :end-line 274, :end-column 13, :arglists (quote ([param value min max width]))}, :name my-mazes.core/slider, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 13, :method-params ([param value min max width]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 274, :max-fixed-arity 5, :fn-var true, :arglists (quote ([param value min max width]))}, make-vertical-bias {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 137, :column 7, :end-line 137, :end-column 25, :arglists (quote ([[[x-min y-min] [x-max y-max]]]))}, :name my-mazes.core/make-vertical-bias, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 25, :method-params ([p__69170]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 137, :end-line 137, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[[x-min y-min] [x-max y-max]]]))}, square-grid {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 30, :column 7, :end-line 30, :end-column 18, :arglists (quote ([n-rows n-cols cell-size]))}, :name my-mazes.core/square-grid, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 18, :method-params ([n-rows n-cols cell-size]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 3, :fn-var true, :arglists (quote ([n-rows n-cols cell-size]))}, make-horizontal-bias {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 134, :column 7, :end-line 134, :end-column 27, :arglists (quote ([[[x-min y-min] [x-max y-max]]]))}, :name my-mazes.core/make-horizontal-bias, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 27, :method-params ([p__69143]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[[x-min y-min] [x-max y-max]]]))}, regular-polygon {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 23, :column 7, :end-line 23, :end-column 22, :arglists (quote ([n]))}, :name my-mazes.core/regular-polygon, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 22, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, main-panel {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 288, :column 7, :end-line 288, :end-column 17, :arglists (quote ([])), :doc "Application root component"}, :name my-mazes.core/main-panel, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 288, :end-line 288, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Application root component"}, swap*! {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 211, :column 7, :end-line 211, :end-column 13, :arglists (quote ([ref f & args])), :doc "Similar to clojure.core/swap!, but records history and returns atom.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(ref f args)], :arglists ([ref f & args]), :arglists-meta (nil)}}, :name my-mazes.core/swap*!, :variadic true, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(ref f args)], :arglists ([ref f & args]), :arglists-meta (nil)}, :method-params [(ref f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 211, :end-line 211, :max-fixed-arity 2, :fn-var true, :arglists ([ref f & args]), :doc "Similar to clojure.core/swap!, but records history and returns atom."}, draw-scene! {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 181, :column 7, :end-line 181, :end-column 18, :arglists (quote ([root width height scene]))}, :name my-mazes.core/draw-scene!, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 18, :method-params ([root width height scene]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 181, :end-line 181, :max-fixed-arity 4, :fn-var true, :arglists (quote ([root width height scene]))}, scene->graph {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 93, :column 7, :end-line 93, :end-column 19, :arglists (quote ([polys]))}, :name my-mazes.core/scene->graph, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 19, :method-params ([polys]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 1, :fn-var true, :arglists (quote ([polys]))}, index-cells {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 64, :column 7, :end-line 64, :end-column 18, :arglists (quote ([cells]))}, :name my-mazes.core/index-cells, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 18, :method-params ([cells]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cells]))}, hexagon-grid {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 44, :column 7, :end-line 44, :end-column 19, :arglists (quote ([n-rows n-cols cell-size]))}, :name my-mazes.core/hexagon-grid, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 19, :method-params ([n-rows n-cols cell-size]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 3, :fn-var true, :arglists (quote ([n-rows n-cols cell-size]))}, sqrt {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 41, :column 7, :end-line 41, :end-column 11, :arglists (quote ([x]))}, :name my-mazes.core/sqrt, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, matching-seg {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 81, :column 7, :end-line 81, :end-column 19, :arglists (quote ([t id seg]))}, :name my-mazes.core/matching-seg, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 19, :method-params ([t id seg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 3, :fn-var true, :arglists (quote ([t id seg]))}, compute-cells {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 247, :column 7, :end-line 247, :end-column 20, :arglists (quote ([shape-f rows cols]))}, :name my-mazes.core/compute-cells, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 20, :method-params ([shape-f rows cols]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 247, :end-line 247, :max-fixed-arity 3, :fn-var true, :arglists (quote ([shape-f rows cols]))}, less-than-seg? {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 196, :column 7, :end-line 196, :end-column 21, :arglists (quote ([s0 s1]))}, :name my-mazes.core/less-than-seg?, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 21, :method-params ([s0 s1]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 196, :end-line 196, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s0 s1]))}, barycenter {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 56, :column 7, :end-line 56, :end-column 17, :arglists (quote ([xys]))}, :name my-mazes.core/barycenter, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 17, :method-params ([xys]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists (quote ([xys]))}, order-seg {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 193, :column 7, :end-line 193, :end-column 16, :arglists (quote ([xy0 xy1]))}, :name my-mazes.core/order-seg, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 16, :method-params ([xy0 xy1]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 193, :end-line 193, :max-fixed-arity 2, :fn-var true, :arglists (quote ([xy0 xy1]))}, maze->polylines {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 164, :column 7, :end-line 164, :end-column 22, :arglists (quote ([cells removed-walls]))}, :name my-mazes.core/maze->polylines, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 22, :method-params ([cells removed-walls]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 164, :end-line 164, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cells removed-walls]))}, my-eps {:name my-mazes.core/my-eps, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 67, :column 1, :end-line 67, :end-column 12, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 67, :column 6, :end-line 67, :end-column 12}}, remove-min {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 201, :column 7, :end-line 201, :end-column 17, :arglists (quote ([lt vs]))}, :name my-mazes.core/remove-min, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 17, :method-params ([lt vs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 201, :end-line 201, :max-fixed-arity 2, :fn-var true, :arglists (quote ([lt vs]))}, bounding-box {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 174, :column 7, :end-line 174, :end-column 19, :arglists (quote ([polylines]))}, :name my-mazes.core/bounding-box, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 19, :method-params ([polylines]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 174, :end-line 174, :max-fixed-arity 1, :fn-var true, :arglists (quote ([polylines]))}, callbacks {:name my-mazes.core/callbacks, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 266, :column 1, :end-line 266, :end-column 15, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 266, :column 6, :end-line 266, :end-column 15}}, update-maze-display! {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 217, :column 7, :end-line 217, :end-column 27, :arglists (quote ([]))}, :name my-mazes.core/update-maze-display!, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 217, :end-line 217, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, flip-2 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 18, :column 7, :end-line 18, :end-column 13, :arglists (quote ([f]))}, :name my-mazes.core/flip-2, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 13, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, init-app {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 300, :column 7, :end-line 300, :end-column 15, :arglists (quote ([])), :doc "Initializes app-state atom with default state"}, :name my-mazes.core/init-app, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 300, :end-line 300, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Initializes app-state atom with default state"}, remove-walls {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 150, :column 7, :end-line 150, :end-column 19, :arglists (quote ([id-start bias-f indexed-cells]))}, :name my-mazes.core/remove-walls, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 19, :method-params ([id-start bias-f indexed-cells]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 150, :end-line 150, :max-fixed-arity 3, :fn-var true, :arglists (quote ([id-start bias-f indexed-cells]))}, app-state {:name my-mazes.core/app-state, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 210, :column 1, :end-line 210, :end-column 19, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 210, :column 10, :end-line 210, :end-column 19}}, update-cells! {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 250, :column 7, :end-line 250, :end-column 20, :arglists (quote ([]))}, :name my-mazes.core/update-cells!, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 250, :end-line 250, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, rel= {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 69, :column 7, :end-line 69, :end-column 11, :arglists (quote ([v0 v1]))}, :name my-mazes.core/rel=, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 11, :method-params ([v0 v1]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v0 v1]))}, hexagon {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 38, :column 7, :end-line 38, :end-column 14, :arglists (quote ([[x y] r]))}, :name my-mazes.core/hexagon, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 14, :method-params ([p__69054 r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[x y] r]))}, abs {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 15, :column 7, :end-line 15, :end-column 10, :arglists (quote ([n]))}, :name my-mazes.core/abs, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 10, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, svg-polyline {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 187, :column 7, :end-line 187, :end-column 19, :arglists (quote ([color width ps]))}, :name my-mazes.core/svg-polyline, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 19, :method-params ([color width ps]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 187, :end-line 187, :max-fixed-arity 3, :fn-var true, :arglists (quote ([color width ps]))}, compute-maze {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 231, :column 7, :end-line 231, :end-column 19, :arglists (quote ([indexed-cells bias-f]))}, :name my-mazes.core/compute-maze, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 19, :method-params ([indexed-cells bias-f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 231, :end-line 231, :max-fixed-arity 2, :fn-var true, :arglists (quote ([indexed-cells bias-f]))}, delta= {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 78, :column 7, :end-line 78, :end-column 13, :arglists (quote ([[x0 y0] [x1 y1]]))}, :name my-mazes.core/delta=, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 13, :method-params ([p__69082 p__69083]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[x0 y0] [x1 y1]]))}, square {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 26, :column 7, :end-line 26, :end-column 13, :arglists (quote ([[x y] r]))}, :name my-mazes.core/square, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :end-column 13, :method-params ([p__69032 r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[x y] r]))}, rotate {:name my-mazes.core/rotate, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 21, :column 1, :end-line 21, :end-column 12, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/hdg/aixfad/my_mazes/core.cljs", :line 21, :column 6, :end-line 21, :end-column 12}}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:min :stroke :key :else :name :value :width :type :size :indexed-cells :borders :style :rows :div :option :cols :stroke-width :max :line-width :id :shape :maze :point :neighbors :input :bias :on-change :p :dummy :height :select}, :order [:id :borders :else :point :neighbors :width :height :stroke :stroke-width :maze :size :line-width :dummy :indexed-cells :bias :shape :rows :cols :input :type :value :min :max :style :on-change :select :name :option :key :div :p]}, :doc nil}