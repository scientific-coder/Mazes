{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name my-mazes.core, :imports nil, :requires {mat thi.ng.geom.matrix, thi.ng.geom.matrix thi.ng.geom.matrix, kd kdtree, dom thi.ng.domus.core, thi.ng.geom.core thi.ng.geom.core, reagent.core reagent.core, r reagent.core, v thi.ng.geom.vector, thi.ng.geom.svg.core thi.ng.geom.svg.core, thi.ng.math.core thi.ng.math.core, shodan.inspection shodan.inspection, shodan shodan.inspection, m thi.ng.math.core, thi.ng.geom.vector thi.ng.geom.vector, kdtree kdtree, g thi.ng.geom.core, thi.ng.domus.core thi.ng.domus.core, svg thi.ng.geom.svg.core}, :uses {TWO_PI thi.ng.math.core, INF+ thi.ng.math.core, M32 thi.ng.geom.matrix, INF- thi.ng.math.core, M44 thi.ng.geom.matrix, vec3 thi.ng.geom.vector, PI thi.ng.math.core, DEG thi.ng.math.core, vec2 thi.ng.geom.vector, RAD thi.ng.math.core, *eps* thi.ng.math.core, SQRT2 thi.ng.math.core}, :defs {alternate-bias {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 79, :column 7, :end-line 79, :end-column 21, :arglists (quote ([f]))}, :name my-mazes.core/alternate-bias, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 21, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, no-bias {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 76, :column 7, :end-line 76, :end-column 14, :arglists (quote ([[x y]]))}, :name my-mazes.core/no-bias, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 14, :method-params ([p__25666]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[x y]]))}, do-paint! {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 176, :column 7, :end-line 176, :end-column 16, :arglists (quote ([]))}, :name my-mazes.core/do-paint!, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, transform-polylines {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 128, :column 7, :end-line 128, :end-column 26, :arglists (quote ([f polys]))}, :name my-mazes.core/transform-polylines, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 26, :method-params ([f polys]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f polys]))}, make-T-bias {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 90, :column 7, :end-line 90, :end-column 18, :arglists (quote ([[[x-min y-min] [x-max y-max]]]))}, :name my-mazes.core/make-T-bias, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 18, :method-params ([p__25700]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[[x-min y-min] [x-max y-max]]]))}, main {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 243, :column 7, :end-line 243, :end-column 11, :arglists (quote ([])), :doc "Application main entry point. Initializes app-state and\n  kicks off React component lifecycle."}, :name my-mazes.core/main, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 243, :end-line 243, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Application main entry point. Initializes app-state and\n  kicks off React component lifecycle."}, cell->barys-id {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 41, :column 7, :end-line 41, :end-column 21, :arglists (quote ([c]))}, :name my-mazes.core/cell->barys-id, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 21, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, less-than-xy? {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 139, :column 7, :end-line 139, :end-column 20, :arglists (quote ([[x0 y0] [x1 y1]]))}, :name my-mazes.core/less-than-xy?, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 20, :method-params ([p__25784 p__25785]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 139, :end-line 139, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[x0 y0] [x1 y1]]))}, pick-random-non-nil {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 63, :column 7, :end-line 63, :end-column 26, :arglists (quote ([bias xs]))}, :name my-mazes.core/pick-random-non-nil, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 26, :method-params ([bias xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 2, :fn-var true, :arglists (quote ([bias xs]))}, slider {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 218, :column 7, :end-line 218, :end-column 13, :arglists (quote ([param value min max width]))}, :name my-mazes.core/slider, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 13, :method-params ([param value min max width]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 218, :end-line 218, :max-fixed-arity 5, :fn-var true, :arglists (quote ([param value min max width]))}, user-error {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 213, :column 7, :end-line 213, :end-column 17, :arglists (quote ([])), :doc "Component displaying current error message"}, :name my-mazes.core/user-error, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 213, :end-line 213, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Component displaying current error message"}, square-grid {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 29, :column 7, :end-line 29, :end-column 18, :arglists (quote ([n-rows n-cols cell-size]))}, :name my-mazes.core/square-grid, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 18, :method-params ([n-rows n-cols cell-size]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 3, :fn-var true, :arglists (quote ([n-rows n-cols cell-size]))}, make-horizontal-bias {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 87, :column 7, :end-line 87, :end-column 27, :arglists (quote ([[[x-min y-min] [x-max y-max]]]))}, :name my-mazes.core/make-horizontal-bias, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 27, :method-params ([p__25673]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[[x-min y-min] [x-max y-max]]]))}, regular-polygon {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 22, :column 7, :end-line 22, :end-column 22, :arglists (quote ([n]))}, :name my-mazes.core/regular-polygon, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 22, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, main-panel {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 225, :column 7, :end-line 225, :end-column 17, :arglists (quote ([])), :doc "Application root component"}, :name my-mazes.core/main-panel, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 225, :end-line 225, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Application root component"}, swap*! {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 203, :column 7, :end-line 203, :end-column 13, :arglists (quote ([ref f & args])), :doc "Similar to clojure.core/swap!, but records history and returns atom.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(ref f args)], :arglists ([ref f & args]), :arglists-meta (nil)}}, :name my-mazes.core/swap*!, :variadic true, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(ref f args)], :arglists ([ref f & args]), :arglists-meta (nil)}, :method-params [(ref f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 203, :end-line 203, :max-fixed-arity 2, :fn-var true, :arglists ([ref f & args]), :doc "Similar to clojure.core/swap!, but records history and returns atom."}, draw-scene! {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 130, :column 7, :end-line 130, :end-column 18, :arglists (quote ([root width height scene]))}, :name my-mazes.core/draw-scene!, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 18, :method-params ([root width height scene]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 130, :max-fixed-arity 4, :fn-var true, :arglists (quote ([root width height scene]))}, scene->graph {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 55, :column 7, :end-line 55, :end-column 19, :arglists (quote ([polys]))}, :name my-mazes.core/scene->graph, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 19, :method-params ([polys]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([polys]))}, index-cells {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 44, :column 7, :end-line 44, :end-column 18, :arglists (quote ([cells]))}, :name my-mazes.core/index-cells, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 18, :method-params ([cells]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cells]))}, matching-seg {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 47, :column 7, :end-line 47, :end-column 19, :arglists (quote ([t id seg]))}, :name my-mazes.core/matching-seg, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 19, :method-params ([t id seg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 3, :fn-var true, :arglists (quote ([t id seg]))}, less-than-seg? {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 145, :column 7, :end-line 145, :end-column 21, :arglists (quote ([s0 s1]))}, :name my-mazes.core/less-than-seg?, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 21, :method-params ([s0 s1]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s0 s1]))}, barycenter {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 36, :column 7, :end-line 36, :end-column 17, :arglists (quote ([xys]))}, :name my-mazes.core/barycenter, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 17, :method-params ([xys]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([xys]))}, order-seg {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 142, :column 7, :end-line 142, :end-column 16, :arglists (quote ([xy0 xy1]))}, :name my-mazes.core/order-seg, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 16, :method-params ([xy0 xy1]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 142, :end-line 142, :max-fixed-arity 2, :fn-var true, :arglists (quote ([xy0 xy1]))}, maze->polylines {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 113, :column 7, :end-line 113, :end-column 22, :arglists (quote ([cells removed-walls]))}, :name my-mazes.core/maze->polylines, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 22, :method-params ([cells removed-walls]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 113, :end-line 113, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cells removed-walls]))}, remove-min {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 150, :column 7, :end-line 150, :end-column 17, :arglists (quote ([lt vs]))}, :name my-mazes.core/remove-min, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 17, :method-params ([lt vs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 150, :end-line 150, :max-fixed-arity 2, :fn-var true, :arglists (quote ([lt vs]))}, bounding-box {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 123, :column 7, :end-line 123, :end-column 19, :arglists (quote ([polylines]))}, :name my-mazes.core/bounding-box, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 19, :method-params ([polylines]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 123, :end-line 123, :max-fixed-arity 1, :fn-var true, :arglists (quote ([polylines]))}, flip-2 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 17, :column 7, :end-line 17, :end-column 13, :arglists (quote ([f]))}, :name my-mazes.core/flip-2, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 13, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, init-app {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 235, :column 7, :end-line 235, :end-column 15, :arglists (quote ([])), :doc "Initializes app-state atom with default state"}, :name my-mazes.core/init-app, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 235, :end-line 235, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Initializes app-state atom with default state"}, remove-walls {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 99, :column 7, :end-line 99, :end-column 19, :arglists (quote ([indexed-cells id-start bias-f]))}, :name my-mazes.core/remove-walls, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 19, :method-params ([indexed-cells id-start bias-f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 3, :fn-var true, :arglists (quote ([indexed-cells id-start bias-f]))}, error-state {:name my-mazes.core/error-state, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 195, :column 1, :end-line 195, :end-column 17, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 195, :column 6, :end-line 195, :end-column 17}}, app-state {:name my-mazes.core/app-state, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 174, :column 1, :end-line 174, :end-column 19, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 174, :column 10, :end-line 174, :end-column 19}}, set-error! {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 197, :column 7, :end-line 197, :end-column 17, :arglists (quote ([err]))}, :name my-mazes.core/set-error!, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 17, :method-params ([err]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 197, :end-line 197, :max-fixed-arity 1, :fn-var true, :arglists (quote ([err]))}, abs {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 14, :column 7, :end-line 14, :end-column 10, :arglists (quote ([n]))}, :name my-mazes.core/abs, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 10, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, svg-polyline {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 136, :column 7, :end-line 136, :end-column 19, :arglists (quote ([color width ps]))}, :name my-mazes.core/svg-polyline, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 19, :method-params ([color width ps]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 136, :end-line 136, :max-fixed-arity 3, :fn-var true, :arglists (quote ([color width ps]))}, square {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 25, :column 7, :end-line 25, :end-column 13, :arglists (quote ([[x y] r]))}, :name my-mazes.core/square, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :end-column 13, :method-params ([p__25604 r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[x y] r]))}, rotate {:name my-mazes.core/rotate, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 20, :column 1, :end-line 20, :end-column 12, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/k8o/aixfad/my_mazes/core.cljs", :line 20, :column 6, :end-line 20, :end-column 12}}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:min :stroke :color :value :width :background :type :size :borders :style :rows :div :cols :stroke-width :max :id :padding :point :neighbors :input :on-change :p :height}, :order [:id :borders :point :neighbors :width :height :stroke :stroke-width :rows :cols :size :p :style :background :padding :color :input :type :value :min :max :on-change :div]}, :doc nil}