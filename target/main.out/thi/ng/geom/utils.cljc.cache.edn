{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name thi.ng.geom.utils, :imports nil, :requires {g thi.ng.geom.core, thi.ng.geom.core thi.ng.geom.core, v thi.ng.geom.vector, thi.ng.geom.vector thi.ng.geom.vector, thi.ng.geom.types thi.ng.geom.types, d thi.ng.dstruct.core, thi.ng.dstruct.core thi.ng.dstruct.core, m thi.ng.math.core, thi.ng.math.core thi.ng.math.core}, :uses {V2 thi.ng.geom.vector, vec3 thi.ng.geom.vector, V3 thi.ng.geom.vector, vec2 thi.ng.geom.vector, *eps* thi.ng.math.core}, :defs {sample-uniform* {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 185, :column 7, :end-line 185, :end-column 22, :arglists (quote ([udist include-last? points]))}, :name thi.ng.geom.utils/sample-uniform*, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 22, :method-params ([udist include-last? points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 185, :end-line 185, :max-fixed-arity 3, :fn-var true, :arglists (quote ([udist include-last? points]))}, from-barycentric {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 146, :column 7, :end-line 146, :end-column 23, :arglists (quote ([points weights]))}, :name thi.ng.geom.utils/from-barycentric, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 23, :method-params ([points weights]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 2, :fn-var true, :arglists (quote ([points weights]))}, tessellate-with-first {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 234, :column 7, :end-line 234, :end-column 28, :arglists (quote ([points]))}, :name thi.ng.geom.utils/tessellate-with-first, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 28, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 234, :end-line 234, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, clockwise2? {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 291, :column 7, :end-line 291, :end-column 18, :arglists (quote ([a b c]))}, :name thi.ng.geom.utils/clockwise2?, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 18, :method-params ([a b c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 291, :end-line 291, :max-fixed-arity 3, :fn-var true, :arglists (quote ([a b c]))}, bounds* {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 107, :column 7, :end-line 107, :end-column 14, :arglists (quote ([zero coll]))}, :name thi.ng.geom.utils/bounds*, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 14, :method-params ([zero coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 2, :fn-var true, :arglists (quote ([zero coll]))}, map-trilinear {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 218, :column 7, :end-line 218, :end-column 20, :arglists (quote ([[a b c d e f g h] [u v w]])), :doc "Takes a seq of 8 points defining a cuboid and vector of normalized\n  UVW coordinates. Applies trilinear interpolation to compute point\n  within the cuboid: U is coord along AD/BC edge, V along AE/BF, W\n  along AB/DC (see above diagram)"}, :name thi.ng.geom.utils/map-trilinear, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 20, :method-params ([p__11822 p__11823]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 218, :end-line 218, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[a b c d e f g h] [u v w]])), :doc "Takes a seq of 8 points defining a cuboid and vector of normalized\n  UVW coordinates. Applies trilinear interpolation to compute point\n  within the cuboid: U is coord along AD/BC edge, V along AE/BF, W\n  along AB/DC (see above diagram)"}, area-xf {:name thi.ng.geom.utils/area-xf, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 340, :column 1, :end-line 340, :end-column 23, :private true, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 340, :column 16, :end-line 340, :end-column 23, :private true}}, arc-length {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 83, :column 7, :end-line 83, :end-column 17, :arglists (quote ([points]))}, :name thi.ng.geom.utils/arc-length, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 17, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, norm-sign2 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 278, :column 7, :end-line 278, :end-column 17, :arglists (quote ([[ax ay] [bx by] [cx cy]]))}, :name thi.ng.geom.utils/norm-sign2, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 17, :method-params ([p__11890 p__11891 p__11892]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 278, :end-line 278, :max-fixed-arity 3, :fn-var true, :arglists (quote ([[ax ay] [bx by] [cx cy]]))}, scale-size {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 103, :column 7, :end-line 103, :end-column 17, :arglists (quote ([s coll] [c s coll])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([s coll] [c s coll]), :arglists ([s coll] [c s coll]), :arglists-meta (nil nil)}}, :name thi.ng.geom.utils/scale-size, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([s coll] [c s coll]), :arglists ([s coll] [c s coll]), :arglists-meta (nil nil)}, :method-params ([s coll] [c s coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 3, :fn-var true, :arglists ([s coll] [c s coll])}, coll-bounds {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 378, :column 7, :end-line 378, :end-column 18, :arglists (quote ([coll])), :doc "Takes a seq of shape entities, calls g/bounds on each and returns\n  union bounds. Does not support collections of mixed 2d/3d entities."}, :name thi.ng.geom.utils/coll-bounds, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 18, :method-params ([coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 378, :end-line 378, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coll])), :doc "Takes a seq of shape entities, calls g/bounds on each and returns\n  union bounds. Does not support collections of mixed 2d/3d entities."}, min-dist {:name thi.ng.geom.utils/min-dist, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 71, :column 1, :end-line 71, :end-column 14, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 71, :column 6, :end-line 71, :end-column 14}}, point-in-triangle2? {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 314, :column 7, :end-line 314, :end-column 26, :arglists (quote ([p a b c]))}, :name thi.ng.geom.utils/point-in-triangle2?, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 26, :method-params ([p a b c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 314, :end-line 314, :max-fixed-arity 4, :fn-var true, :arglists (quote ([p a b c]))}, map-bilinear {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 212, :column 7, :end-line 212, :end-column 19, :arglists (quote ([[a b c d] [u v]])), :doc "Takes a seq of 4 points in ccw order and 2D vector of normalized UV\n  coordinates. Applies bilinear interpolation to compute point within\n  the rect: U is coord along AB/DC edge, V along BC/AD"}, :name thi.ng.geom.utils/map-bilinear, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 19, :method-params ([p__11808 p__11809]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 212, :end-line 212, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[a b c d] [u v]])), :doc "Takes a seq of 4 points in ccw order and 2D vector of normalized UV\n  coordinates. Applies bilinear interpolation to compute point within\n  the rect: U is coord along AB/DC edge, V along BC/AD"}, triangle-barycentric-coords {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 297, :column 7, :end-line 297, :end-column 34, :arglists (quote ([[a b c] p] [a b c p] [a b c p u v])), :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([[a b c] p] [a b c p] [a b c p u v]), :arglists ([[a b c] p] [a b c p] [a b c p u v]), :arglists-meta (nil nil nil)}}, :name thi.ng.geom.utils/triangle-barycentric-coords, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 34, :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([[a b c] p] [a b c p] [a b c p u v]), :arglists ([[a b c] p] [a b c p] [a b c p u v]), :arglists-meta (nil nil nil)}, :method-params ([[a b c] p] [a b c p] [a b c p u v]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 297, :end-line 297, :max-fixed-arity 6, :fn-var true, :arglists ([[a b c] p] [a b c p] [a b c p u v])}, dist* {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 64, :column 7, :end-line 64, :end-column 12, :arglists (quote ([rf]))}, :name thi.ng.geom.utils/dist*, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 12, :method-params ([rf]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rf]))}, tessellate-max4 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 255, :column 7, :end-line 255, :end-column 22, :arglists (quote ([points]))}, :name thi.ng.geom.utils/tessellate-max4, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 22, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 255, :end-line 255, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, sample-segment-with-res {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 207, :column 7, :end-line 207, :end-column 30, :arglists (quote ([a b res include-b?]))}, :name thi.ng.geom.utils/sample-segment-with-res, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 30, :method-params ([a b res include-b?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 207, :end-line 207, :max-fixed-arity 4, :fn-var true, :arglists (quote ([a b res include-b?]))}, closest-point-on-line {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 20, :column 7, :end-line 20, :end-column 28, :arglists (quote ([p a b]))}, :name thi.ng.geom.utils/closest-point-on-line, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 28, :method-params ([p a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 3, :fn-var true, :arglists (quote ([p a b]))}, clockwise3? {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 294, :column 7, :end-line 294, :end-column 18, :arglists (quote ([a b c n]))}, :name thi.ng.geom.utils/clockwise3?, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 18, :method-params ([a b c n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 294, :end-line 294, :max-fixed-arity 4, :fn-var true, :arglists (quote ([a b c n]))}, tri-area2 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 285, :column 7, :end-line 285, :end-column 16, :arglists (quote ([a b c]))}, :name thi.ng.geom.utils/tri-area2, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 16, :method-params ([a b c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 285, :end-line 285, :max-fixed-arity 3, :fn-var true, :arglists (quote ([a b c]))}, into-mesh {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 399, :column 7, :end-line 399, :end-column 16, :arglists (quote ([mesh add-face mesh-or-faces])), :doc "Takes a target mesh, its add-face fn and a source mesh or face\n  sequence. Adds faces to target mesh and returns it."}, :name thi.ng.geom.utils/into-mesh, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 16, :method-params ([mesh add-face mesh-or-faces]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 399, :end-line 399, :max-fixed-arity 3, :fn-var true, :arglists (quote ([mesh add-face mesh-or-faces])), :doc "Takes a target mesh, its add-face fn and a source mesh or face\n  sequence. Adds faces to target mesh and returns it."}, tessellating-transducer {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 334, :column 8, :end-line 334, :end-column 31, :private true, :arglists (quote ([f]))}, :private true, :name thi.ng.geom.utils/tessellating-transducer, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 31, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 334, :end-line 334, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, point-at {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 171, :column 7, :end-line 171, :end-column 15, :arglists (quote ([t points] [t points idx])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([t points] [t points idx]), :arglists ([t points] [t points idx]), :arglists-meta (nil nil)}}, :name thi.ng.geom.utils/point-at, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([t points] [t points idx]), :arglists ([t points] [t points idx]), :arglists-meta (nil nil)}, :method-params ([t points] [t points idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 171, :end-line 171, :max-fixed-arity 3, :fn-var true, :arglists ([t points] [t points idx])}, max-dist {:name thi.ng.geom.utils/max-dist, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 72, :column 1, :end-line 72, :end-column 14, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 72, :column 6, :end-line 72, :end-column 14}}, fit-all-into-bounds {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 384, :column 7, :end-line 384, :end-column 26, :arglists (quote ([bounds coll])), :doc "Takes an AABB or rect and seq of shapes, proportionally scales and\n  repositions all items to fit into given bounds. Returns lazyseq of\n  transformed entities. Does not support collections of mixed 2D/3D\n  entities. Use rects as target bounds for 2D colls."}, :name thi.ng.geom.utils/fit-all-into-bounds, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 26, :method-params ([bounds coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 384, :end-line 384, :max-fixed-arity 2, :fn-var true, :arglists (quote ([bounds coll])), :doc "Takes an AABB or rect and seq of shapes, proportionally scales and\n  repositions all items to fit into given bounds. Returns lazyseq of\n  transformed entities. Does not support collections of mixed 2D/3D\n  entities. Use rects as target bounds for 2D colls."}, norm-sign3 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 282, :column 7, :end-line 282, :end-column 17, :arglists (quote ([a b c]))}, :name thi.ng.geom.utils/norm-sign3, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 17, :method-params ([a b c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 282, :end-line 282, :max-fixed-arity 3, :fn-var true, :arglists (quote ([a b c]))}, bounding-rect {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 354, :column 7, :end-line 354, :end-column 20, :arglists (quote ([points]))}, :name thi.ng.geom.utils/bounding-rect, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 20, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 354, :end-line 354, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, ortho-normal {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 273, :column 7, :end-line 273, :end-column 19, :arglists (quote ([[a b c]] [a b] [a b c])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([[a b c]] [a b] [a b c]), :arglists ([[a b c]] [a b] [a b c]), :arglists-meta (nil nil nil)}}, :name thi.ng.geom.utils/ortho-normal, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([[a b c]] [a b] [a b c]), :arglists ([[a b c]] [a b] [a b c]), :arglists-meta (nil nil nil)}, :method-params ([[a b c]] [a b] [a b c]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 273, :end-line 273, :max-fixed-arity 3, :fn-var true, :arglists ([[a b c]] [a b] [a b c])}, tri-area3 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 288, :column 7, :end-line 288, :end-column 16, :arglists (quote ([a b c]))}, :name thi.ng.geom.utils/tri-area3, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 16, :method-params ([a b c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 288, :end-line 288, :max-fixed-arity 3, :fn-var true, :arglists (quote ([a b c]))}, radial-bounds {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 126, :column 7, :end-line 126, :end-column 20, :arglists (quote ([ctor c r-or-points]))}, :name thi.ng.geom.utils/radial-bounds, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 20, :method-params ([ctor c r-or-points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 126, :end-line 126, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ctor c r-or-points]))}, delta-contains {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 142, :column 7, :end-line 142, :end-column 21, :arglists (quote ([points p eps]))}, :name thi.ng.geom.utils/delta-contains, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 21, :method-params ([points p eps]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 142, :end-line 142, :max-fixed-arity 3, :fn-var true, :arglists (quote ([points p eps]))}, closest-line-between {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 40, :column 7, :end-line 40, :end-column 27, :arglists (quote ([a1 b1 a2 b2]))}, :name thi.ng.geom.utils/closest-line-between, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 27, :method-params ([a1 b1 a2 b2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 4, :fn-var true, :arglists (quote ([a1 b1 a2 b2]))}, point-at-index {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 150, :column 7, :end-line 150, :end-column 21, :arglists (quote ([points t])), :doc "Takes a seq of points and normalized index (0.0 .. 1.0), returns\n  interpolated point at position t."}, :name thi.ng.geom.utils/point-at-index, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 21, :method-params ([points t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 150, :end-line 150, :max-fixed-arity 2, :fn-var true, :arglists (quote ([points t])), :doc "Takes a seq of points and normalized index (0.0 .. 1.0), returns\n  interpolated point at position t."}, bounding-circle {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 364, :column 7, :end-line 364, :end-column 22, :arglists (quote ([points] [c r-or-points])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([points] [c r-or-points]), :arglists ([points] [c r-or-points]), :arglists-meta (nil nil)}}, :name thi.ng.geom.utils/bounding-circle, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([points] [c r-or-points]), :arglists ([points] [c r-or-points]), :arglists-meta (nil nil)}, :method-params ([points] [c r-or-points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 364, :end-line 364, :max-fixed-arity 2, :fn-var true, :arglists ([points] [c r-or-points])}, sample-uniform {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 199, :column 7, :end-line 199, :end-column 21, :arglists (quote ([udist include-last? points]))}, :name thi.ng.geom.utils/sample-uniform, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 21, :method-params ([udist include-last? points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 199, :end-line 199, :max-fixed-arity 3, :fn-var true, :arglists (quote ([udist include-last? points]))}, axis-bounds {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 133, :column 7, :end-line 133, :end-column 18, :arglists (quote ([axis coll]))}, :name thi.ng.geom.utils/axis-bounds, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 18, :method-params ([axis coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 133, :end-line 133, :max-fixed-arity 2, :fn-var true, :arglists (quote ([axis coll]))}, bounding-rect-raw {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 118, :column 7, :end-line 118, :end-column 24, :arglists (quote ([points]))}, :name thi.ng.geom.utils/bounding-rect-raw, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 24, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, tessellate-with-point {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 226, :column 7, :end-line 226, :end-column 28, :arglists (quote ([points] [c points])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([points] [c points]), :arglists ([points] [c points]), :arglists-meta (nil nil)}}, :name thi.ng.geom.utils/tessellate-with-point, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 28, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([points] [c points]), :arglists ([points] [c points]), :arglists-meta (nil nil)}, :method-params ([points] [c points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 226, :end-line 226, :max-fixed-arity 2, :fn-var true, :arglists ([points] [c points])}, bounding-box {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 359, :column 7, :end-line 359, :end-column 19, :arglists (quote ([points]))}, :name thi.ng.geom.utils/bounding-box, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 19, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 359, :end-line 359, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, axis-range {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 138, :column 7, :end-line 138, :end-column 17, :arglists (quote ([axis coll]))}, :name thi.ng.geom.utils/axis-range, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 17, :method-params ([axis coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 2, :fn-var true, :arglists (quote ([axis coll]))}, closest-point-on-segment {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 24, :column 7, :end-line 24, :end-column 31, :arglists (quote ([p a b]))}, :name thi.ng.geom.utils/closest-point-on-segment, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 31, :method-params ([p a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 3, :fn-var true, :arglists (quote ([p a b]))}, tessellate-tri-with-midpoints {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 241, :column 7, :end-line 241, :end-column 36, :arglists (quote ([[a b c]]))}, :name thi.ng.geom.utils/tessellate-tri-with-midpoints, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 36, :method-params ([p__11852]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 241, :end-line 241, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[a b c]]))}, closest-point-coeff {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 15, :column 7, :end-line 15, :end-column 26, :arglists (quote ([p a b]))}, :name thi.ng.geom.utils/closest-point-coeff, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 26, :method-params ([p a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 3, :fn-var true, :arglists (quote ([p a b]))}, bounding-box-raw {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 122, :column 7, :end-line 122, :end-column 23, :arglists (quote ([points]))}, :name thi.ng.geom.utils/bounding-box-raw, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 23, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, center {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 97, :column 7, :end-line 97, :end-column 13, :arglists (quote ([c' coll] [c c' coll])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([c' coll] [c c' coll]), :arglists ([c' coll] [c c' coll]), :arglists-meta (nil nil)}}, :name thi.ng.geom.utils/center, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([c' coll] [c c' coll]), :arglists ([c' coll] [c c' coll]), :arglists-meta (nil nil)}, :method-params ([c' coll] [c c' coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 3, :fn-var true, :arglists ([c' coll] [c c' coll])}, closest-point-on-segments {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 29, :column 7, :end-line 29, :end-column 32, :arglists (quote ([p segments]))}, :name thi.ng.geom.utils/closest-point-on-segments, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 32, :method-params ([p segments]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p segments]))}, tessellate-face {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 261, :column 7, :end-line 261, :end-column 22, :arglists (quote ([tess-fn]))}, :name thi.ng.geom.utils/tessellate-face, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 22, :method-params ([tess-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 261, :end-line 261, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tess-fn]))}, centroid {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 87, :column 7, :end-line 87, :end-column 15, :arglists (quote ([coll]))}, :name thi.ng.geom.utils/centroid, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 15, :method-params ([coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 1, :fn-var true, :arglists (quote ([coll]))}, arc-length-index {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 74, :column 7, :end-line 74, :end-column 23, :arglists (quote ([points]))}, :name thi.ng.geom.utils/arc-length-index, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 23, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, transform-mesh {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 417, :column 7, :end-line 417, :end-column 21, :arglists (quote ([mesh add-face tx])), :doc "Takes a mesh, its add-face fn and a vertex transformation fn.\n  Transforms all mesh vertices and returns new mesh."}, :name thi.ng.geom.utils/transform-mesh, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 21, :method-params ([mesh add-face tx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 417, :end-line 417, :max-fixed-arity 3, :fn-var true, :arglists (quote ([mesh add-face tx])), :doc "Takes a mesh, its add-face fn and a vertex transformation fn.\n  Transforms all mesh vertices and returns new mesh."}, total-volume {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 350, :column 7, :end-line 350, :end-column 19, :arglists (quote ([faces] [xf faces])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([faces] [xf faces]), :arglists ([faces] [xf faces]), :arglists-meta (nil nil)}}, :name thi.ng.geom.utils/total-volume, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([faces] [xf faces]), :arglists ([faces] [xf faces]), :arglists-meta (nil nil)}, :method-params ([faces] [xf faces]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 350, :end-line 350, :max-fixed-arity 2, :fn-var true, :arglists ([faces] [xf faces])}, tessellate-3 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 248, :column 7, :end-line 248, :end-column 19, :arglists (quote ([points]))}, :name thi.ng.geom.utils/tessellate-3, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 19, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 248, :end-line 248, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, bounding-sphere {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 371, :column 7, :end-line 371, :end-column 22, :arglists (quote ([points] [c r-or-points])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([points] [c r-or-points]), :arglists ([points] [c r-or-points]), :arglists-meta (nil nil)}}, :name thi.ng.geom.utils/bounding-sphere, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 22, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([points] [c r-or-points]), :arglists ([points] [c r-or-points]), :arglists-meta (nil nil)}, :method-params ([points] [c r-or-points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 371, :end-line 371, :max-fixed-arity 2, :fn-var true, :arglists ([points] [c r-or-points])}, volume-xf {:name thi.ng.geom.utils/volume-xf, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 343, :column 1, :end-line 343, :end-column 25, :private true, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 343, :column 16, :end-line 343, :end-column 25, :private true}}, total-area-3d {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 346, :column 7, :end-line 346, :end-column 20, :arglists (quote ([faces] [xf faces])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([faces] [xf faces]), :arglists ([faces] [xf faces]), :arglists-meta (nil nil)}}, :name thi.ng.geom.utils/total-area-3d, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([faces] [xf faces]), :arglists ([faces] [xf faces]), :arglists-meta (nil nil)}, :method-params ([faces] [xf faces]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 346, :end-line 346, :max-fixed-arity 2, :fn-var true, :arglists ([faces] [xf faces])}, map-mesh {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 410, :column 7, :end-line 410, :end-column 15, :arglists (quote ([f mesh])), :doc "Applies f to all faces of given mesh and adds resulting faces to\n  new mesh. Thus f should return a seq of raw faces (i.e. each face as\n  2-elem vector of [verts attribs]. Returns new mesh."}, :name thi.ng.geom.utils/map-mesh, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 15, :method-params ([f mesh]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 410, :end-line 410, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f mesh])), :doc "Applies f to all faces of given mesh and adds resulting faces to\n  new mesh. Thus f should return a seq of raw faces (i.e. each face as\n  2-elem vector of [verts attribs]. Returns new mesh."}, point-in-triangle3? {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 324, :column 7, :end-line 324, :end-column 26, :arglists (quote ([p a b c]))}, :name thi.ng.geom.utils/point-in-triangle3?, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 26, :method-params ([p a b c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 324, :end-line 324, :max-fixed-arity 4, :fn-var true, :arglists (quote ([p a b c]))}, point-at* {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :line 161, :column 7, :end-line 161, :end-column 16, :arglists (quote ([points idx total t i]))}, :name thi.ng.geom.utils/point-at*, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/utils.cljc", :end-column 16, :method-params ([points idx total t i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 161, :end-line 161, :max-fixed-arity 5, :fn-var true, :arglists (quote ([points idx total t i]))}}, :require-macros {mm thi.ng.math.macros, thi.ng.math.macros thi.ng.math.macros}, :cljs.analyzer/constants {:seen #{:parallel :default :ua :ub :type :size :b :intersect :a}, :order [:type :parallel :a :b :ua :ub :intersect :default :size]}, :doc nil}