{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name thi.ng.geom.types, :imports nil, :requires {thi.ng.geom.vector thi.ng.geom.vector}, :uses nil, :defs {->Plane {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 27, :column 12, :end-line 27, :end-column 17, :internal-ctor true, :factory :positional, :arglists (quote ([n w]))}, :name thi.ng.geom.types/->Plane, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 17, :method-params ([n w]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 27, :end-line 27, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n w]))}, Graph {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.geom.types/Graph, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 17, :type true, :column 12, :internal-ctor true, :line 6, :record true, :end-line 6, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->Sphere {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 29, :column 12, :end-line 29, :end-column 18, :internal-ctor true, :factory :positional, :arglists (quote ([p r]))}, :name thi.ng.geom.types/->Sphere, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 18, :method-params ([p r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p r]))}, ->Quad3 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 28, :column 12, :end-line 28, :end-column 17, :internal-ctor true, :factory :positional, :arglists (quote ([points]))}, :name thi.ng.geom.types/->Quad3, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 17, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, ->Mesh2 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 13, :column 12, :end-line 13, :end-column 17, :internal-ctor true, :factory :positional, :arglists (quote ([vertices normals fnormals vnormals edges faces attribs]))}, :name thi.ng.geom.types/->Mesh2, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 17, :method-params ([vertices normals fnormals vnormals edges faces attribs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 13, :end-line 13, :max-fixed-arity 7, :fn-var true, :arglists (quote ([vertices normals fnormals vnormals edges faces attribs]))}, map->Quad3 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 28, :column 12, :end-line 28, :end-column 17, :internal-ctor true, :factory :map, :arglists (quote ([G__11720]))}, :name thi.ng.geom.types/map->Quad3, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 17, :method-params ([G__11720]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__11720]))}, ->Circle2 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 9, :column 12, :end-line 9, :end-column 19, :internal-ctor true, :factory :positional, :arglists (quote ([p r]))}, :name thi.ng.geom.types/->Circle2, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 19, :method-params ([p r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 9, :end-line 9, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p r]))}, Mesh2 {:num-fields 7, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.geom.types/Mesh2, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 17, :type true, :column 12, :internal-ctor true, :line 13, :record true, :end-line 13, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, Plane {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.geom.types/Plane, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 17, :type true, :column 12, :internal-ctor true, :line 27, :record true, :end-line 27, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->Tetrahedron {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 30, :column 12, :end-line 30, :end-column 23, :internal-ctor true, :factory :positional, :arglists (quote ([points]))}, :name thi.ng.geom.types/->Tetrahedron, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 23, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, ->Triangle2 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 17, :column 12, :end-line 17, :end-column 21, :internal-ctor true, :factory :positional, :arglists (quote ([points]))}, :name thi.ng.geom.types/->Triangle2, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 21, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, IndexedMesh {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.geom.types/IndexedMesh, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 23, :type true, :column 12, :internal-ctor true, :line 24, :record true, :end-line 24, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->IndexedMesh {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 24, :column 12, :end-line 24, :end-column 23, :internal-ctor true, :factory :positional, :arglists (quote ([vertices faces attribs]))}, :name thi.ng.geom.types/->IndexedMesh, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 23, :method-params ([vertices faces attribs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 24, :end-line 24, :max-fixed-arity 3, :fn-var true, :arglists (quote ([vertices faces attribs]))}, Rect2 {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.geom.types/Rect2, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 17, :type true, :column 12, :internal-ctor true, :line 16, :record true, :end-line 16, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, Triangle3 {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.geom.types/Triangle3, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 21, :type true, :column 12, :internal-ctor true, :line 31, :record true, :end-line 31, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->Sphere {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 29, :column 12, :end-line 29, :end-column 18, :internal-ctor true, :factory :map, :arglists (quote ([G__11728]))}, :name thi.ng.geom.types/map->Sphere, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 18, :method-params ([G__11728]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__11728]))}, ->Line2 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 11, :column 12, :end-line 11, :end-column 17, :internal-ctor true, :factory :positional, :arglists (quote ([points]))}, :name thi.ng.geom.types/->Line2, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 17, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, ->LineStrip3 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 26, :column 12, :end-line 26, :end-column 22, :internal-ctor true, :factory :positional, :arglists (quote ([points]))}, :name thi.ng.geom.types/->LineStrip3, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 22, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, map->BasicMesh {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 22, :column 12, :end-line 22, :end-column 21, :internal-ctor true, :factory :map, :arglists (quote ([G__11672]))}, :name thi.ng.geom.types/map->BasicMesh, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 21, :method-params ([G__11672]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__11672]))}, ->Bezier2 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 8, :column 12, :end-line 8, :end-column 19, :internal-ctor true, :factory :positional, :arglists (quote ([points]))}, :name thi.ng.geom.types/->Bezier2, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 19, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, ->BasicMesh {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 22, :column 12, :end-line 22, :end-column 21, :internal-ctor true, :factory :positional, :arglists (quote ([vertices faces fnormals]))}, :name thi.ng.geom.types/->BasicMesh, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 21, :method-params ([vertices faces fnormals]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 22, :end-line 22, :max-fixed-arity 3, :fn-var true, :arglists (quote ([vertices faces fnormals]))}, map->Graph {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 6, :column 12, :end-line 6, :end-column 17, :internal-ctor true, :factory :map, :arglists (quote ([G__11560]))}, :name thi.ng.geom.types/map->Graph, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 17, :method-params ([G__11560]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__11560]))}, LineStrip2 {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.geom.types/LineStrip2, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 22, :type true, :column 12, :internal-ctor true, :line 12, :record true, :end-line 12, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->Ellipse2 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 10, :column 12, :end-line 10, :end-column 20, :internal-ctor true, :factory :map, :arglists (quote ([G__11584]))}, :name thi.ng.geom.types/map->Ellipse2, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 20, :method-params ([G__11584]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__11584]))}, AABB {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.geom.types/AABB, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 16, :type true, :column 12, :internal-ctor true, :line 19, :record true, :end-line 19, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->Graph {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 6, :column 12, :end-line 6, :end-column 17, :internal-ctor true, :factory :positional, :arglists (quote ([vertices edges]))}, :name thi.ng.geom.types/->Graph, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 17, :method-params ([vertices edges]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 6, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vertices edges]))}, map->GMesh {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 23, :column 12, :end-line 23, :end-column 17, :internal-ctor true, :factory :map, :arglists (quote ([G__11680]))}, :name thi.ng.geom.types/map->GMesh, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 17, :method-params ([G__11680]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__11680]))}, Line2 {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.geom.types/Line2, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 17, :type true, :column 12, :internal-ctor true, :line 11, :record true, :end-line 11, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->Path2 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 14, :column 12, :end-line 14, :end-column 17, :internal-ctor true, :factory :map, :arglists (quote ([G__11616]))}, :name thi.ng.geom.types/map->Path2, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 17, :method-params ([G__11616]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__11616]))}, map->Bezier2 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 8, :column 12, :end-line 8, :end-column 19, :internal-ctor true, :factory :map, :arglists (quote ([G__11568]))}, :name thi.ng.geom.types/map->Bezier2, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 19, :method-params ([G__11568]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__11568]))}, map->LineStrip2 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 12, :column 12, :end-line 12, :end-column 22, :internal-ctor true, :factory :map, :arglists (quote ([G__11600]))}, :name thi.ng.geom.types/map->LineStrip2, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 22, :method-params ([G__11600]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__11600]))}, Ellipse2 {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.geom.types/Ellipse2, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 20, :type true, :column 12, :internal-ctor true, :line 10, :record true, :end-line 10, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->Plane {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 27, :column 12, :end-line 27, :end-column 17, :internal-ctor true, :factory :map, :arglists (quote ([G__11712]))}, :name thi.ng.geom.types/map->Plane, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 17, :method-params ([G__11712]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__11712]))}, map->LineStrip3 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 26, :column 12, :end-line 26, :end-column 22, :internal-ctor true, :factory :map, :arglists (quote ([G__11704]))}, :name thi.ng.geom.types/map->LineStrip3, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 22, :method-params ([G__11704]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__11704]))}, map->Rect2 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 16, :column 12, :end-line 16, :end-column 17, :internal-ctor true, :factory :map, :arglists (quote ([G__11632]))}, :name thi.ng.geom.types/map->Rect2, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 17, :method-params ([G__11632]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__11632]))}, map->Polygon2 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 15, :column 12, :end-line 15, :end-column 20, :internal-ctor true, :factory :map, :arglists (quote ([G__11624]))}, :name thi.ng.geom.types/map->Polygon2, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 20, :method-params ([G__11624]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__11624]))}, Sphere {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.geom.types/Sphere, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 18, :type true, :column 12, :internal-ctor true, :line 29, :record true, :end-line 29, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->Mesh2 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 13, :column 12, :end-line 13, :end-column 17, :internal-ctor true, :factory :map, :arglists (quote ([G__11608]))}, :name thi.ng.geom.types/map->Mesh2, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 17, :method-params ([G__11608]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__11608]))}, Bezier3 {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.geom.types/Bezier3, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 19, :type true, :column 12, :internal-ctor true, :line 21, :record true, :end-line 21, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, Circle2 {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.geom.types/Circle2, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 19, :type true, :column 12, :internal-ctor true, :line 9, :record true, :end-line 9, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->Circle2 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 9, :column 12, :end-line 9, :end-column 19, :internal-ctor true, :factory :map, :arglists (quote ([G__11576]))}, :name thi.ng.geom.types/map->Circle2, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 19, :method-params ([G__11576]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__11576]))}, map->Triangle3 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 31, :column 12, :end-line 31, :end-column 21, :internal-ctor true, :factory :map, :arglists (quote ([G__11744]))}, :name thi.ng.geom.types/map->Triangle3, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 21, :method-params ([G__11744]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__11744]))}, ->GMesh {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 23, :column 12, :end-line 23, :end-column 17, :internal-ctor true, :factory :positional, :arglists (quote ([vertices normals fnormals vnormals edges faces]))}, :name thi.ng.geom.types/->GMesh, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 17, :method-params ([vertices normals fnormals vnormals edges faces]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 23, :end-line 23, :max-fixed-arity 6, :fn-var true, :arglists (quote ([vertices normals fnormals vnormals edges faces]))}, GMesh {:num-fields 6, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.geom.types/GMesh, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 17, :type true, :column 12, :internal-ctor true, :line 23, :record true, :end-line 23, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->Rect2 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 16, :column 12, :end-line 16, :end-column 17, :internal-ctor true, :factory :positional, :arglists (quote ([p size]))}, :name thi.ng.geom.types/->Rect2, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 17, :method-params ([p size]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p size]))}, Triangle2 {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.geom.types/Triangle2, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 21, :type true, :column 12, :internal-ctor true, :line 17, :record true, :end-line 17, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->Line2 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 11, :column 12, :end-line 11, :end-column 17, :internal-ctor true, :factory :map, :arglists (quote ([G__11592]))}, :name thi.ng.geom.types/map->Line2, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 17, :method-params ([G__11592]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__11592]))}, Cuboid {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.geom.types/Cuboid, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 18, :type true, :column 12, :internal-ctor true, :line 20, :record true, :end-line 20, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->Triangle3 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 31, :column 12, :end-line 31, :end-column 21, :internal-ctor true, :factory :positional, :arglists (quote ([points]))}, :name thi.ng.geom.types/->Triangle3, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 21, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, Quad3 {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.geom.types/Quad3, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 17, :type true, :column 12, :internal-ctor true, :line 28, :record true, :end-line 28, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->IndexedMesh {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 24, :column 12, :end-line 24, :end-column 23, :internal-ctor true, :factory :map, :arglists (quote ([G__11688]))}, :name thi.ng.geom.types/map->IndexedMesh, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 23, :method-params ([G__11688]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__11688]))}, map->Tetrahedron {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 30, :column 12, :end-line 30, :end-column 23, :internal-ctor true, :factory :map, :arglists (quote ([G__11736]))}, :name thi.ng.geom.types/map->Tetrahedron, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 23, :method-params ([G__11736]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__11736]))}, map->Bezier3 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 21, :column 12, :end-line 21, :end-column 19, :internal-ctor true, :factory :map, :arglists (quote ([G__11664]))}, :name thi.ng.geom.types/map->Bezier3, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 19, :method-params ([G__11664]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__11664]))}, Path2 {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.geom.types/Path2, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 17, :type true, :column 12, :internal-ctor true, :line 14, :record true, :end-line 14, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, Bezier2 {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.geom.types/Bezier2, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 19, :type true, :column 12, :internal-ctor true, :line 8, :record true, :end-line 8, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->Cuboid {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 20, :column 12, :end-line 20, :end-column 18, :internal-ctor true, :factory :positional, :arglists (quote ([points]))}, :name thi.ng.geom.types/->Cuboid, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 18, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, map->Cuboid {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 20, :column 12, :end-line 20, :end-column 18, :internal-ctor true, :factory :map, :arglists (quote ([G__11656]))}, :name thi.ng.geom.types/map->Cuboid, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 18, :method-params ([G__11656]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__11656]))}, map->Line3 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 25, :column 12, :end-line 25, :end-column 17, :internal-ctor true, :factory :map, :arglists (quote ([G__11696]))}, :name thi.ng.geom.types/map->Line3, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 17, :method-params ([G__11696]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__11696]))}, ->Path2 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 14, :column 12, :end-line 14, :end-column 17, :internal-ctor true, :factory :positional, :arglists (quote ([segments]))}, :name thi.ng.geom.types/->Path2, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 17, :method-params ([segments]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([segments]))}, map->Triangle2 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 17, :column 12, :end-line 17, :end-column 21, :internal-ctor true, :factory :map, :arglists (quote ([G__11640]))}, :name thi.ng.geom.types/map->Triangle2, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 21, :method-params ([G__11640]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__11640]))}, LineStrip3 {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.geom.types/LineStrip3, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 22, :type true, :column 12, :internal-ctor true, :line 26, :record true, :end-line 26, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, Tetrahedron {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.geom.types/Tetrahedron, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 23, :type true, :column 12, :internal-ctor true, :line 30, :record true, :end-line 30, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->Line3 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 25, :column 12, :end-line 25, :end-column 17, :internal-ctor true, :factory :positional, :arglists (quote ([points]))}, :name thi.ng.geom.types/->Line3, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 17, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, Line3 {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.geom.types/Line3, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 17, :type true, :column 12, :internal-ctor true, :line 25, :record true, :end-line 25, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, Polygon2 {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.geom.types/Polygon2, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 20, :type true, :column 12, :internal-ctor true, :line 15, :record true, :end-line 15, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->Bezier3 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 21, :column 12, :end-line 21, :end-column 19, :internal-ctor true, :factory :positional, :arglists (quote ([points]))}, :name thi.ng.geom.types/->Bezier3, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 19, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, map->AABB {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 19, :column 12, :end-line 19, :end-column 16, :internal-ctor true, :factory :map, :arglists (quote ([G__11648]))}, :name thi.ng.geom.types/map->AABB, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 16, :method-params ([G__11648]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__11648]))}, ->Ellipse2 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 10, :column 12, :end-line 10, :end-column 20, :internal-ctor true, :factory :positional, :arglists (quote ([p rx ry]))}, :name thi.ng.geom.types/->Ellipse2, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 20, :method-params ([p rx ry]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 10, :end-line 10, :max-fixed-arity 3, :fn-var true, :arglists (quote ([p rx ry]))}, BasicMesh {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name thi.ng.geom.types/BasicMesh, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 21, :type true, :column 12, :internal-ctor true, :line 22, :record true, :end-line 22, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->AABB {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 19, :column 12, :end-line 19, :end-column 16, :internal-ctor true, :factory :positional, :arglists (quote ([p size]))}, :name thi.ng.geom.types/->AABB, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 16, :method-params ([p size]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p size]))}, ->LineStrip2 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 12, :column 12, :end-line 12, :end-column 22, :internal-ctor true, :factory :positional, :arglists (quote ([points]))}, :name thi.ng.geom.types/->LineStrip2, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 22, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, ->Polygon2 {:protocol-inline nil, :meta {:file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :line 15, :column 12, :end-line 15, :end-column 20, :internal-ctor true, :factory :positional, :arglists (quote ([points]))}, :name thi.ng.geom.types/->Polygon2, :variadic false, :file "/home/bernard/.boot/cache/tmp/home/bernard/Documents/Workspace/my-Mazes/my-mazes/ac0/9yxuoa/main.out/thi/ng/geom/types.cljc", :end-column 20, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:rx :r :vertices ry edges fnormals p :n :w rx r vertices :vnormals :points :segments :size n w :attribs vnormals segments points :normals size :faces :tag attribs Vec3 normals :p :ry :edges :fnormals faces}, :order [:vertices :edges vertices edges :points points :p :r p r :rx :ry rx ry :normals :fnormals :vnormals :faces :attribs normals fnormals vnormals faces attribs :segments segments :size size :tag Vec3 :n :w n w]}, :doc nil}